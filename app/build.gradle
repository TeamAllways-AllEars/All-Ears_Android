plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    id "com.google.protobuf" version "0.9.4"
}

ext {
    grpcVersion = '1.61.0'
}

android {
    namespace 'gdsc.allways.allears'
    compileSdk 34

    defaultConfig {
        applicationId "gdsc.allways.allears"
        minSdk 30
        targetSdk 33
        versionCode 1
        versionName "1.0"
        vectorDrawables {
            useSupportLibrary true
        }
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        configurations.all {
            resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    // exclude files that are not needed from the cloud client libraries
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += 'META-INF/LICENSE'
            excludes += 'META-INF/INDEX.LIST'
            excludes += 'META-INF/DEPENDENCIES'
        }
    }

    // Specify tflite file should not be compressed for the app apk
    aaptOptions {
        noCompress "tflite"
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'com.google.android.gms:play-services-wearable:18.1.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation "androidx.wear.compose:compose-material:$wear_compose_version"
    implementation "androidx.wear.compose:compose-foundation:$wear_compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation "androidx.wear.tiles:tiles:$wear_tiles_version"
    implementation "androidx.wear.tiles:tiles-material:$wear_tiles_version"
    implementation "com.google.android.horologist:horologist-compose-tools:$horologist_version"
    implementation "com.google.android.horologist:horologist-tiles:$horologist_version"
    implementation 'androidx.wear.watchface:watchface-complications-data-source-ktx:1.1.1'
    // Standard Wear OS libraries
    implementation "androidx.wear:wear:1.3.0"
    // includes support for wearable specific inputs
    implementation "androidx.wear:wear-input:1.1.0"
    // constraint layout
    //implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    // Import tflite dependencies
    //implementation 'org.tensorflow:tensorflow-lite:2.4.0'
    // The GPU delegate library is optional. Depend on it as needed.
    //implementation 'org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly-SNAPSHOT'    // 추가 시 에러 남. 원인 파악 필요.
    //implementation 'org.tensorflow:tensorflow-lite-support:0.2.0'

    // Import the Audio Task Library dependency (NNAPI is included)
    implementation 'org.tensorflow:tensorflow-lite-task-audio:0.4.0'
    // Import the GPU delegate plugin Library for GPU inference
    implementation 'org.tensorflow:tensorflow-lite-gpu-delegate-plugin:0.4.0'

    // cloud client library
    implementation 'com.google.cloud:google-cloud-speech:4.30.0'
    implementation "io.grpc:grpc-okhttp:$grpcVersion"

    implementation "io.grpc:grpc-stub:$grpcVersion"
    implementation 'com.google.api.grpc:grpc-google-cloud-speech-v1:1.20.0'
    implementation('com.google.auth:google-auth-library-oauth2-http:0.7.0') {
        exclude module: 'httpclient'
    }
    // You need to depend on the lite runtime library, not protobuf-java
    //implementation 'com.google.protobuf:protobuf-lite:3.0.0'

//    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+


    // You need to depend on the lite runtime library, not protobuf-java
    //implementation 'com.google.protobuf:protobuf-lite:3.0.1'

    // You need to depend on the lite runtime library, not protobuf-java
    //implementation 'com.google.protobuf:protobuf-javalite:3.8.0'



    //implementation 'javax.annotation:javax.annotation-api:1.2'
    //implementation 'io.grpc:grpc-protobuf-lite:1.3.0'


    // -------------
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}

protobuf {
    protoc {
        // You still need protoc like in the non-Android case
        artifact = 'com.google.protobuf:protoc:3.7.0'
    }
    plugins {
        javalite {
            // The codegen for lite comes as a separate artifact
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().configureEach { task ->
            task.builtins {
                // In most cases you don't need the full Java output
                // if you use the lite output.
                remove java
            }
            task.plugins {
                javalite { }
            }
        }
    }
}